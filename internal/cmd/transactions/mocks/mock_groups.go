// Code generated by MockGen. DO NOT EDIT.
// Source: groups.go
//
// Generated by this command:
//
//	mockgen -source=groups.go -destination=mocks/mock_groups.go -package=controllermocks
//

// Package controllermocks is a generated GoMock package.
package controllermocks

import (
	context "context"
	reflect "reflect"

	userpb "github.com/fair-n-square-co/apis/gen/pkg/fairnsquare/service/user/v1alpha1"
	gomock "go.uber.org/mock/gomock"
)

// MockGroupController is a mock of GroupController interface.
type MockGroupController struct {
	ctrl     *gomock.Controller
	recorder *MockGroupControllerMockRecorder
}

// MockGroupControllerMockRecorder is the mock recorder for MockGroupController.
type MockGroupControllerMockRecorder struct {
	mock *MockGroupController
}

// NewMockGroupController creates a new mock instance.
func NewMockGroupController(ctrl *gomock.Controller) *MockGroupController {
	mock := &MockGroupController{ctrl: ctrl}
	mock.recorder = &MockGroupControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupController) EXPECT() *MockGroupControllerMockRecorder {
	return m.recorder
}

// CreateGroup mocks base method.
func (m *MockGroupController) CreateGroup(ctx context.Context, req *userpb.CreateGroupRequest) (*userpb.CreateGroupResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGroup", ctx, req)
	ret0, _ := ret[0].(*userpb.CreateGroupResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGroup indicates an expected call of CreateGroup.
func (mr *MockGroupControllerMockRecorder) CreateGroup(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGroup", reflect.TypeOf((*MockGroupController)(nil).CreateGroup), ctx, req)
}

// ListGroups mocks base method.
func (m *MockGroupController) ListGroups(ctx context.Context, req *userpb.ListGroupsRequest) (*userpb.ListGroupsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListGroups", ctx, req)
	ret0, _ := ret[0].(*userpb.ListGroupsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListGroups indicates an expected call of ListGroups.
func (mr *MockGroupControllerMockRecorder) ListGroups(ctx, req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListGroups", reflect.TypeOf((*MockGroupController)(nil).ListGroups), ctx, req)
}
